version: '3.1'
services:
  db:
    image: postgres:13.1
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: postgres   
    volumes:
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'

  zk1:
    image: confluentinc/cp-zookeeper:6.0.0
    container_name: zk1
    environment:
        ZOOKEEPER_CLIENT_PORT: "2181"
        ZOOKEEPER_SERVER_ID: "1"

  zk2:
    image: confluentinc/cp-zookeeper:6.0.0
    container_name: zk2
    environment:
        ZOOKEEPER_CLIENT_PORT: "2181"
        ZOOKEEPER_SERVER_ID: "2"

  zk3:
    image: confluentinc/cp-zookeeper:6.0.0
    container_name: zk3
    environment:
        ZOOKEEPER_CLIENT_PORT: "2181"
        ZOOKEEPER_SERVER_ID: "3"

  kafka1:
    image: confluentinc/cp-kafka:6.0.0
    container_name: kafka1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
    ports:
      - '9092:9092'

  kafka2:
    image: confluentinc/cp-kafka:6.0.0
    container_name: kafka2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
    ports:
      - '9093:9093'

  kafka3:
    image: confluentinc/cp-kafka:6.0.0
    container_name: kafka3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
    ports:
      - '9094:9094'
  
  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0
    container_name: schema-registry
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zk1:2181
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_DEBUG: 'true'
    ports:
      - '8084:8081'

  akhq:
    image: tchiotludo/akhq:0.15.0
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka1:9092"
              schema-registry:
                url: "http://schema-registry:8081"
              connect:
                - name: connect
                  url: "http://connect:8080"
    ports:
      - '8090:8080'

  connect:
    build:
      context: ./connect
    container_name: connect
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka1:9092
      CONNECT_REST_PORT: 8080
      CONNECT_GROUP_ID: "connect"
      CONNECT_CONFIG_STORAGE_TOPIC: demo-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: demo-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: demo-connect-status
      CONNECT_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-6.0.0.jar
      # Connect worker
      # CONNECT_SECURITY_PROTOCOL: SASL_SSL
      # CONNECT_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      # CONNECT_SASL_MECHANISM: PLAIN
      # Connect producer
      # CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
      # CONNECT_PRODUCER_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      # CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
      # CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      # CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_SSL
      # CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      # CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN
      # Connect consumer
      # CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      # CONNECT_CONSUMER_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      # CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
      # CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      # CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_SSL
      # CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: $SASL_JAAS_CONFIG
      # CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN
    ports:
      - '8083:8080'